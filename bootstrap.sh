#!/usr/bin/env bash
set -euo pipefail

# Env:
#   DOTFILES_REPO  default: https://github.com/tnikic/dotfiles.git

DOTFILES_REPO="${DOTFILES_REPO:-https://github.com/tnikic/dotfiles.git}"

if [[ "$EUID" -eq 0 ]]; then
  echo "ERROR: Do not run as root. Use your normal user with sudo rights." >&2
  exit 1
fi
command -v sudo >/dev/null || { echo "ERROR: sudo required"; exit 1; }
grep -qi arch /etc/os-release || { echo "ERROR: This script is for Arch Linux."; exit 1; }

echo "==> Ensure system and keyring are up to date"
sudo pacman -Sy --noconfirm --needed archlinux-keyring
sudo pacman -Syu --noconfirm

echo "==> Installing yay (AUR helper) non-interactively"
if ! command -v yay >/dev/null 2>&1; then
  sudo pacman -S --noconfirm --needed base-devel git
  tmpdir="$(mktemp -d)"
  git clone https://aur.archlinux.org/yay-bin.git "$tmpdir/yay-bin"
  pushd "$tmpdir/yay-bin" >/dev/null
  makepkg -f
  pkgfile="$(ls -1t ./*.pkg.tar.* | head -n1)"
  sudo pacman -U --noconfirm "$pkgfile"
  popd >/dev/null
  rm -rf "$tmpdir"
else
  echo "==> yay already installed"
fi

# Single package list, one per line (grouped with comments)
PACKAGES=(
  # Core system and networking
  networkmanager
  polkit

  # Wayland + Hyprland
  hyprland
  waybar
  hyprlock
  hyprpaper
  wofi
  wl-clipboard
  xdg-desktop-portal
  xdg-desktop-portal-hyprland
  xdg-desktop-portal-gtk
  qt5-wayland
  qt6-wayland

  # Audio
  pipewire
  wireplumber
  pipewire-alsa
  pipewire-pulse
  pipewire-jack
  pavucontrol

  # Login manager (TUI greeter -> Hyprland)
  greetd
  tuigreet

  # Fonts
  inter-font
  noto-fonts
  noto-fonts-emoji
  ttf-jetbrains-mono-nerd

  # CLI tools
  git
  curl
  unzip
  zip
  base-devel
  stow
  zsh
  zoxide
  fzf
  eza
  fd
  ripgrep
  lazygit
  starship

  # Apps
  ghostty
  zen-browser-bin
  neovim-git
  nwg-displays

  # Dev toolchains
  nodejs
  npm
  go
)

echo "==> Installing packages via yay (repo + AUR)"
yay -S \
  --noconfirm \
  --sudoloop \
  --needed \
  --removemake \
  --cleanafter \
  --nodiffmenu \
  --nocleanmenu \
  --noeditmenu \
  "${PACKAGES[@]}"

echo "==> Enable NetworkManager"
sudo systemctl enable --now NetworkManager

echo "==> Clone and stow dotfiles"
DOTFILES_DIR="$HOME/.dotfiles"
if [[ -d "$DOTFILES_DIR/.git" ]]; then
  git -C "$DOTFILES_DIR" pull --ff-only || true
elif [[ -d "$DOTFILES_DIR" ]]; then
  mv "$DOTFILES_DIR" "$DOTFILES_DIR.bak-$(date +%Y%m%d-%H%M%S)"
  git clone "$DOTFILES_REPO" "$DOTFILES_DIR"
else
  git clone "$DOTFILES_REPO" "$DOTFILES_DIR"
fi

# Ensure Hyprland uses your config (remove autogenerated before stow)
rm -rf "$HOME/.config/hypr"
( cd "$DOTFILES_DIR" && stow -v -R -t "$HOME" . )

# Clean bash configs if migrating fully to zsh
rm -f "$HOME/.bashrc" "$HOME/.bash_profile" "$HOME/.bash_logout" "$HOME/.bash_history" || true

echo "==> Set default shell to zsh"
if command -v zsh >/dev/null 2>&1; then
  ZSH_PATH="$(command -v zsh)"
  if [[ "${SHELL:-}" != "$ZSH_PATH" ]]; then
    sudo chsh -s "$ZSH_PATH" "$USER" || echo "WARN: chsh failed; run: sudo chsh -s \"$ZSH_PATH\" \"$USER\""
  fi
else
  echo "WARN: zsh not found in PATH"
fi

echo "==> Configure greetd (tuigreet -> Hyprland)"
sudo install -d -m 755 /etc/greetd
sudo tee /etc/greetd/config.toml >/dev/null <<'EOF'
[terminal]
vt = 1

[default_session]
command = "tuigreet --time --remember --cmd Hyprland"
user = "greeter"
EOF
sudo systemctl enable --now greetd

cat <<'EOF'

==> Done.

- Reboot to start the TUI greeter (tuigreet) and Hyprland:  sudo reboot
- If you use nwg-displays, ensure your hyprland.conf has:  source = ~/.config/hypr/monitor.conf

EOF
